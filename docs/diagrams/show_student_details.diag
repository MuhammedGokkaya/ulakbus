{
autonumber = True;
//activation = None;
default_note_color = lightblue;
edge_length = 180;
span_height = 24;
b[label="User\n(Browser)"];
e[label="Ext. HA Proxy"];
f[label="Gunicorn â†’ Falcon"];
ze[label="Zengine"];
sw[label="SpiffWorkflow"];
m[label="ZAERP Modules"];
p[label="Pyoko DAL"];
//z[label="Zato Services"];
c[label="Redis"];
i[label="Int. HA Proxy"];
r[label="Riak"]
//class fff[color=red]
//group {class=fff;i;r}
//group {p;c}

b -> e  [label = "GET:/show_student/STD_ID"];
e -> f [label = "GET:/show_student/STD_ID", note="Gunicorn and Falcon\n combined for brevity"];
f -> ze [label = "dispatch_request(show_student, context)", note="context holds request\n  and response objects"];
ze -> sw [label = "start_or_resume_wf\n(show_student, context)"];

sw -> sw [label = "execute READY \n tasks with context"];

sw -> m [label = "show_student(context)", note="zaerp.views.student.show_student"];
m -> p [label = "get_student(STD_ID)"]

alt{
    p => c [label ="namespace: student, \n id: STD_ID",
     return="None", note="Not found in cache "]
}
    alt {
        p -> i [label ="bucket: student, \n id: STD_ID",
         return=""]
        i => r  [label ="bucket: student, \n id: STD_ID",
         return="found", leftnote=" Get from Riak, cache to Redis"]
        p <-- i [label=""]
        p => c [label="cache_obj(student_obj, 'student', STD_ID)", return="ok"]
    }
//}
m <-- p [label="return student data"]
sw <-- m [label="return student data"]
sw --> sw [label="complete_current_task()"]
ze <-- sw [label="return student data"]
ze --> ze [label="save_workflow_state()"]
b <-- e <-- f <-- ze  [label="return json response"]
}
